/*
    날짜 : 2025/07/22
    이름 : 천수빈
    내용 : SQL_연습문제3
*/

-- 실습 3-1
Alter session set "_ORACLE_SCRIPT"=true;
create user bank identified by 1234;
grant connect, resource, unlimited tablespace to bank;

-- 실습 3-2
DROP TABLE CUSTOMER;
create table CUSTOMER (
    C_ID    VARCHAR2(14) PRIMARY KEY,
    C_NAME  VARCHAR2(20) NOT NULL,
    C_TYPE  NUMBER(1)   NOT NULL,
    C_HP    VARCHAR2(14) UNIQUE NOT NULL,
    C_ADDR  VARCHAR2(100)
);

DROP TABLE ACCOUNT;
create table ACCOUNT (
    ACC_NO CHAR(11) PRIMARY KEY,
    ACC_TYPE CHAR(2) NOT NULL,
    ACC_NAME VARCHAR2(20) NOT NULL,
    ACC_CID VARCHAR2(14) NOT NULL,
    ACC_BALANCE NUMBER DEFAULT 0,
    ACC_DATE DATE NOT NULL,
    FOREIGN KEY (ACC_CID) REFERENCES CUSTOMER (C_ID)
);

DROP TABLE TRANSACTION;
create table TRANSACTION (
    TR_NO NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TR_ACC CHAR(11) NOT NULL,
    TR_TYPE NUMBER(1) NOT NULL,
    TR_AMOUNT NUMBER DEFAULT 0,
    TR_DATE DATE NOT NULL,
    FOREIGN KEY (TR_ACC) REFERENCES ACCOUNT (ACC_NO)
);

-- 실습 3-3
INSERT INTO customer VALUES ('730423-1000001', '김유신',     1, '010-1234-1001', '경기도 수원시');
INSERT INTO customer VALUES ('750210-1000002', '김춘추',     1, '010-1234-1002', '경기도 광주시');
INSERT INTO customer VALUES ('830513-2000003', '선덕여왕',   1, '010-1234-1003', '서울시 마포구');
INSERT INTO customer VALUES ('870830-1000004', '강감찬',     1, '010-1234-1004', '서울시 영등포구');
INSERT INTO customer VALUES ('910912-2000005', '신사임당',   1, '010-1234-1005', '강원도 강릉시');
INSERT INTO customer VALUES ('941127-1000006', '이순신',     1, '010-1234-1006', '부산시 영도구');
INSERT INTO customer VALUES ('220-82-52237', '(주)한국전산', 2, '02-134-1045',   '서울시 강서구');
INSERT INTO customer VALUES ('361-22-42687', '(주)정보산업', 2, '031-563-1253',  '경기도 광명시');
INSERT INTO customer VALUES ('102-22-51094', '부산의원',     2, '051-518-1010',  '부산시 남구');

INSERT INTO account VALUES ('101-11-1001', 'S1', '자유저축예금', '730423-1000001',  420000, '2005-07-21 12:10:03');
INSERT INTO account VALUES ('101-12-1002', 'S2', '정기적립예금', '830513-2000003', 1020000, '2011-05-13 13:20:12');
INSERT INTO account VALUES ('101-11-1003', 'S1', '자유저축예금', '870830-1000004',  53000, '2007-02-17 21:54:06');
INSERT INTO account VALUES ('101-21-1004', 'L1', '고객신용대출', '910912-2000005', 1200500, '2009-08-25 14:34:57');
INSERT INTO account VALUES ('101-13-1005', 'S3', '주택청약예금', '941127-1000006', 720800, '2012-10-15 19:56:34');
INSERT INTO account VALUES ('101-22-1006', 'L2', '예금담보대출', '730423-1000001', 25000, '2013-12-11 18:14:22');
INSERT INTO account VALUES ('101-23-1007', 'L2', '주택담보대출', '750210-1000002', 2700000, '2020-09-23 09:19:13');
INSERT INTO account VALUES ('101-11-2001', 'S1', '자유저축예금', '220-82-52237', 23000000, '2003-04-14 11:02:43');
INSERT INTO account VALUES ('101-11-2002', 'S1', '자유저축예금', '361-22-42687',  4201000, '2008-12-30 12:32:59');
INSERT INTO account VALUES ('101-11-2003', 'S1', '자유저축예금', '102-22-51094', 8325010, '2010-06-07 15:47:04');

INSERT INTO transaction (tr_acc, tr_type, tr_amount, tr_date) VALUES ('101-11-1001', 1, 50000, '2025-07-12 13:55:31');
INSERT INTO transaction (tr_acc, tr_type, tr_amount, tr_date) VALUES ('101-11-1003', 1, 120000, '2025-07-12 14:15:22');
INSERT INTO transaction (tr_acc, tr_type, tr_amount, tr_date) VALUES ('101-11-2001', 2, 300000, '2025-07-19 17:53:42');
INSERT INTO transaction (tr_acc, tr_type, tr_amount, tr_date) VALUES ('101-12-1002', 1, 1000000, '2025-07-20 07:25:08');
INSERT INTO transaction (tr_acc, tr_type, tr_amount, tr_date) VALUES ('101-11-1001', 0, 0, '2025-07-20 09:21:13');
INSERT INTO transaction (tr_acc, tr_type, tr_amount, tr_date) VALUES ('101-13-1005', 1, 200000, '2025-07-20 10:15:02');
INSERT INTO transaction (tr_acc, tr_type, tr_amount, tr_date) VALUES ('101-11-1001', 1, 450000, '2025-07-20 11:34:42');
INSERT INTO transaction (tr_acc, tr_type, tr_amount, tr_date) VALUES ('101-11-2002', 2, 32000, '2025-07-21 09:12:37');
INSERT INTO transaction (tr_acc, tr_type, tr_amount, tr_date) VALUES ('101-11-2003', 0, 0, '2025-07-21 16:02:31');
INSERT INTO transaction (tr_acc, tr_type, tr_amount, tr_date) VALUES ('101-11-1003', 2, 75000, '2025-07-21 17:41:11');

-- 실습 3-4
SELECT * FROM ACCOUNT;

-- 실습 3-5
SELECT * FROM CUSTOMER;

-- 실습 3-6
SELECT * FROM TRANSACTION WHERE TR_TYPE != 0;

-- 실습 3-7
SELECT C_NAME, C_ID FROM CUSTOMER;

-- 실습 3-8
SELECT ACC_TYPE, ACC_NAME FROM ACCOUNT;

-- 실습 3-9
SELECT DISTINCT ACC_TYPE, ACC_NAME FROM ACCOUNT;

-- 실습 3-10
SELECT * FROM ACCOUNT 
    WHERE acc_name = '자유저축예금' 
    and acc_balance >= 1000000;

-- 실습 3-11
SELECT * FROM customer WHERE C_ADDR LIKE '경기도 %%';

-- 실습 3-12
SELECT * FROM CUSTOMER WHERE C_TYPE = 2;

-- 실습 3-13
SELECT * FROM TRANSACTION WHERE TR_TYPE = 1;
    
-- 실습 3-14
SELECT * FROM transaction 
    WHERE TR_TYPE = 2
    ORDER BY TR_AMOUNT DESC;

-- 실습 3-15
SELECT SUM(TR_AMOUNT) AS 입금총합, AVG(TR_AMOUNT) AS 입금평균 FROM TRANSACTION WHERE TR_TYPE=1;

-- 실습 3-16
SELECT MAX(TR_AMOUNT) AS 큰_금액, MIN(TR_AMOUNT) AS 작은_금액 FROM transaction WHERE tr_type=2;

-- 실습 3-17
SELECT * FROM account 
    WHERE ACC_NAME = '자유저축예금'
    AND acc_balance >= 1000000
    ORDER BY acc_balance DESC;

-- 실습 3-18
SELECT * FROM ACCOUNT 
    WHERE ACC_NAME = '자유저축예금'
    ORDER BY acc_balance DESC
    FETCH FIRST 1 ROW ONLY;
    
-- 실습 3-19
SELECT * FROM transaction WHERE tr_amount IN (1, 2)
    ORDER BY tr_type, tr_amount DESC;
    
-- 실습 3-20 ** 리뷰
SELECT
    COUNT(CASE WHEN tr_type = 0 THEN 1 END) AS "조회 건수",
    COUNT(CASE WHEN tr_type = 1 THEN 1 END) AS "입금 건수",
    COUNT(CASE WHEN tr_type = 2 THEN 1 END) AS "출금 건수"
FROM transaction;

-- 실습 3-21 ** 리뷰
SELECT
    TR_TYPE,
    CASE
        WHEN TR_TYPE = 0 THEN '조회'
        WHEN TR_TYPE = 1 THEN '입금'
        WHEN TR_TYPE = 2 THEN '출금'
    END AS 거래종류,
    TR_ACC,
    TR_AMOUNT
FROM TRANSACTION;

-- 실습 3-22 ** 리뷰
SELECT 
    TR_TYPE, COUNT(TR_NO) FROM TRANSACTION
    GROUP BY TR_TYPE ORDER BY TR_TYPE ASC;

-- 실습 3-23 ** 리뷰
SELECT
    TR_ACC,
    TR_TYPE,
    SUM(TR_AMOUNT) AS 합계
FROM TRANSACTION
WHERE TR_TYPE = 1
GROUP BY TR_TYPE
HAVING SUM(TR_AMOUNT) >= 100000
ORDER BY SUM(TR_AMOUNT) DESC;

-- 실습 3-24 ** 리뷰
SELECT
    TR_ACC,
    TR_TYPE,
    SUM(TR_AMOUNT) AS 합계
FROM TRANSACTION
WHERE TR_TYPE IN (1, 2)
GROUP BY TR_ACC
HAVING SUM(TR_AMOUNT) >= 100000
ORDER BY 합계 DESC;

-- 실습 3-25 ** 리뷰

-- 실습 3-26 ** 리뷰

-- 실습 3-27 ** 리뷰

-- 실습 3-28 ** 리뷰
SELECT
    a.acc_no,
    c.C_NAME,
    SUM(CASE WHEN t.TR_TYPE = 1 THEN t.TR_AMOUNT ELSE 0 END) AS 총입금액,
    SUM(CASE WHEN t.TR_TYPE = 2 THEN t.TR_AMOUNT ELSE 0 END) AS 총출금액
FROM TRANSACTION t
??? JOIN ACCOUNT a ON t.TR_ACC = a.ACC_NO
JOIN CUSTOMER c ON a.ACC_CID = c.C_ID
WHERE c.C_TYPE = 1
GROUP BY a.acc_no, c.C_NAME;

-- 실습 3-29 ** 리뷰
SELECT
    a.ACC_NO,
    a.ACC_CID,
    a.ACC_NAME,
    c.C_NAME,
    a.ACC_BALANCE +
        SUM(CASE WHEN t.TR_TYPE = 001 THEN t.TR_AMOUNT ELSE 0 END) -
        SUM(CASE WHEN t.TR_TYPE = 002 THEN t.TR_AMOUNT ELSE 0 END) AS 최종잔액
FROM
    ACCOUNT a
LEFT JOIN
    TRANSACTION t ON a.ACC_NO = t.TR_ACC
JOIN
    CUSTOMER c ON a.ACC_CID = c.C_ID
WHERE
    C_TYPE = 1
GROUP BY
    a.ACC_NO,
    a.ACC_CID,
    a.ACC_NAME,
    a.ACC_BALANCE,
    c.C_NAME
ORDER BY
    a.ACC_NO;
    
-- 실습 3-30 ** 리뷰
SELECT
    c.C_NAME,
    a.ACC_NO,
    t.TOTAL_DEPOSIT,
    c.C_ADDR
FROM
    ACCOUNT a
    JOIN CUSTOMER c ON a.ACC_CID = c.C_ID
    JOIN (
        SELECT
            TR_ACC,
            SUM(TR_AMOUNT) AS TOTAL_DEPOSIT
        FROM TRANSACTION
        WHERE TR_TYPE = 1
        GROUP BY TR_ACC
    ) t ON a.ACC_NO = t.TR_ACC
WHERE
    t.TOTAL_DEPOSIT = (
        SELECT
            MAX(SUM_AMOUNT)
        FROM (
            SELECT
                TR_ACC,
                SUM(TR_AMOUNT) AS SUM_AMOUNT
            FROM TRANSACTION
            WHERE TR_TYPE = 1
            GROUP BY TR_ACC
        )
);